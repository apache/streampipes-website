"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1395],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||a;return t?n.createElement(m,i(i({ref:r},l),{},{components:t})):n.createElement(m,i({ref:r},l))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},15363:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],p={id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",sidebar_label:"Math",original_id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop"},s=void 0,c={unversionedId:"pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",id:"version-0.70.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",description:"\x3c!--",source:"@site/versioned_docs/version-0.70.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",permalink:"/docs/0.70.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",draft:!1,tags:[],version:"0.70.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688363956,formattedLastUpdatedAt:"Jul 3, 2023",frontMatter:{id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",sidebar_label:"Math",original_id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop"},sidebar:"documentation",previous:{title:"Language Detection",permalink:"/docs/0.70.0/pe/org.apache.streampipes.processors.textmining.jvm.languagedetection"},next:{title:"Measure Time Between Two Sensors",permalink:"/docs/0.70.0/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.timekeeping"}},l={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Left operand",id:"left-operand",level:3},{value:"Right operand",id:"right-operand",level:3},{value:"Operation",id:"operation",level:3},{value:"Output",id:"output",level:2}],h={toc:u},d="wrapper";function m(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)(d,(0,n.Z)({},h,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.enricher.flink.processor.math.mathop/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Performs calculations on event properties (+, -, *, /, %)."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-input"},"Required input"),(0,a.kt)("p",null,"The math processor works with any event that has at least one field containing a numerical value."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"left-operand"},"Left operand"),(0,a.kt)("p",null,"The field from the input event that should be used as the left operand."),(0,a.kt)("h3",{id:"right-operand"},"Right operand"),(0,a.kt)("p",null,"The field from the input event that should be used as the right operand."),(0,a.kt)("h3",{id:"operation"},"Operation"),(0,a.kt)("p",null,"The math operation that should be performed."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"The processor appends the calculation result to each input event."))}m.isMDXComponent=!0}}]);