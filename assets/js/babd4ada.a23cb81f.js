"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[16284],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var g=n.createContext({}),s=function(e){var t=n.useContext(g),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(g.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,g=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=s(r),d=a,f=c["".concat(g,".").concat(d)]||c[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var g in t)hasOwnProperty.call(t,g)&&(p[g]=t[g]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7411:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>g,default:()=>f,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],p={id:"org.apache.streampipes.processors.aggregation.flink.aggregation",title:"Aggregation",sidebar_label:"Aggregation",original_id:"org.apache.streampipes.processors.aggregation.flink.aggregation"},g=void 0,s={unversionedId:"pe/org.apache.streampipes.processors.aggregation.flink.aggregation",id:"version-0.90.0/pe/org.apache.streampipes.processors.aggregation.flink.aggregation",title:"Aggregation",description:"\x3c!--",source:"@site/versioned_docs/version-0.90.0/pe/org.apache.streampipes.processors.aggregation.flink.aggregation.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.aggregation.flink.aggregation",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.aggregation.flink.aggregation",draft:!1,tags:[],version:"0.90.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688361723,formattedLastUpdatedAt:"Jul 3, 2023",frontMatter:{id:"org.apache.streampipes.processors.aggregation.flink.aggregation",title:"Aggregation",sidebar_label:"Aggregation",original_id:"org.apache.streampipes.processors.aggregation.flink.aggregation"},sidebar:"documentation",previous:{title:"Absence",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.pattern-detection.flink.absence"},next:{title:"And",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.pattern-detection.flink.and"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Group by",id:"group-by",level:3},{value:"Output every",id:"output-every",level:3},{value:"Time window",id:"time-window",level:3},{value:"Aggregated Value",id:"aggregated-value",level:3},{value:"Output",id:"output",level:2}],u={toc:c},d="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.aggregation.flink.aggregation/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Performs different aggregation functions based on a sliding time window (e.g., average, sum, min, max)"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-input"},"Required input"),(0,i.kt)("p",null,"The aggregation processor requires a data stream that has at least one field containing a numerical value."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"group-by"},"Group by"),(0,i.kt)("p",null,"The aggregation function can be calculated separately (partitioned) by the selected field value. "),(0,i.kt)("h3",{id:"output-every"},"Output every"),(0,i.kt)("p",null,"The frequency in which aggregated values are sent in seconds."),(0,i.kt)("h3",{id:"time-window"},"Time window"),(0,i.kt)("p",null,"The size of the time window in seconds"),(0,i.kt)("h3",{id:"aggregated-value"},"Aggregated Value"),(0,i.kt)("p",null,"The field used for calculating the aggregation value."),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"This processor appends the latest aggregated value to every input event that arrives."))}f.isMDXComponent=!0}}]);