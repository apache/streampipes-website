"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[97249],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return r?o.createElement(f,l(l({ref:t},c),{},{components:r})):o.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},89265:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var o=r(87462),n=r(63366),a=(r(67294),r(3905)),l=["components"],i={id:"org.apache.streampipes.processors.transformation.jvm.booloperator.counter",title:"Boolean Counter",sidebar_label:"Boolean Counter"},p=void 0,s={unversionedId:"pe/org.apache.streampipes.processors.transformation.jvm.booloperator.counter",id:"pe/org.apache.streampipes.processors.transformation.jvm.booloperator.counter",title:"Boolean Counter",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.counter.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.counter",permalink:"/docs/next/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.counter",draft:!1,tags:[],version:"current",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688328858,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.processors.transformation.jvm.booloperator.counter",title:"Boolean Counter",sidebar_label:"Boolean Counter"},sidebar:"documentation",previous:{title:"Boilerplate Removal",permalink:"/docs/next/pe/org.apache.streampipes.processors.transformation.flink.processor.boilerplate"},next:{title:"Boolean Inverter",permalink:"/docs/next/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.inverter"}},c={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Boolean Field",id:"boolean-field",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Flank parameter",id:"flank-parameter",level:3},{value:"Output",id:"output",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,l);return(0,a.kt)(d,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.transformation.jvm.booloperator.counter/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"This processor monitors a boolean value and counts how often the value of the boolean changes.\nA user can configure whether the changes from FALSE to TRUE, TRUE to FALSE, or BOTH changes should be counted."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-input"},"Required input"),(0,a.kt)("p",null,"A boolean value is required in the data stream and can be selected with the field mapping."),(0,a.kt)("h3",{id:"boolean-field"},"Boolean Field"),(0,a.kt)("p",null,"The boolean value to be monitored."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"A user can configure whether the changes from TRUE to FALSE, FALSE to TRUE, or all changes of the boolean value should be counted."),(0,a.kt)("h3",{id:"flank-parameter"},"Flank parameter"),(0,a.kt)("p",null,"Either:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TRUE -> FALSE: Increase counter on a true followed by a false "),(0,a.kt)("li",{parentName:"ul"},"FALSE -> TRUE: Increase counter on a false followed by a true"),(0,a.kt)("li",{parentName:"ul"},"BOTH: Increase counter on each change of the boolean value on two consecutive events")),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"Adds an additional numerical field with the current count value to the event. Events are just emitted when the counter changes.\nRuntime Name: countField"))}f.isMDXComponent=!0}}]);