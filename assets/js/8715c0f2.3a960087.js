"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2697],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},31544:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],s={id:"org.apache.streampipes.processors.changedetection.jvm.cusum",title:"Cusum",sidebar_label:"Cusum"},c=void 0,l={unversionedId:"pe/org.apache.streampipes.processors.changedetection.jvm.cusum",id:"version-0.92.0/pe/org.apache.streampipes.processors.changedetection.jvm.cusum",title:"Cusum",description:"\x3c!--",source:"@site/versioned_docs/version-0.92.0/pe/org.apache.streampipes.processors.changedetection.jvm.cusum.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.changedetection.jvm.cusum",permalink:"/docs/pe/org.apache.streampipes.processors.changedetection.jvm.cusum",draft:!1,tags:[],version:"0.92.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688328858,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.processors.changedetection.jvm.cusum",title:"Cusum",sidebar_label:"Cusum"},sidebar:"documentation",previous:{title:"Creates JTS Point",permalink:"/docs/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.latLngToGeo"},next:{title:"Distance Calculator",permalink:"/docs/pe/org.apache.streampipes.processors.geo.jvm.processor.distancecalculator"}},p={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Value to observe",id:"value-to-observe",level:3},{value:"Parameter <code>k</code>",id:"parameter-k",level:3},{value:"Parameter <code>h</code>",id:"parameter-h",level:3},{value:"Output",id:"output",level:2}],d={toc:u},m="wrapper";function h(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Performs change detection on a single dimension of the incoming data stream. A change is detected if the cumulative deviation from the mean exceeds a certain threshold. This implementation tracks the mean and the standard deviation using Welford's algorithm, which is well suited for data streams."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"required-input"},"Required input"),(0,o.kt)("p",null,"The cusum processor requires a data stream that has at least one field containing a numerical value."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"value-to-observe"},"Value to observe"),(0,o.kt)("p",null,"Specify the dimension of the data stream (e.g. the temperature) on which to perform change detection. "),(0,o.kt)("h3",{id:"parameter-k"},"Parameter ",(0,o.kt)("inlineCode",{parentName:"h3"},"k")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"k")," controls the sensitivity of the change detector. Its unit are standard deviations. For an observation ",(0,o.kt)("inlineCode",{parentName:"p"},"x_n"),", the Cusum value is ",(0,o.kt)("inlineCode",{parentName:"p"},"S_n = max(0, S_{n-1} - z-score(x_n) - k)"),". Thus, the cusum-score ",(0,o.kt)("inlineCode",{parentName:"p"},"S")," icnreases if ",(0,o.kt)("inlineCode",{parentName:"p"},"S_{n-1} - z-score(x_n) > k"),". "),(0,o.kt)("h3",{id:"parameter-h"},"Parameter ",(0,o.kt)("inlineCode",{parentName:"h3"},"h")),(0,o.kt)("p",null,"The alarm theshold in standard deviations. An alarm occurs if ",(0,o.kt)("inlineCode",{parentName:"p"},"S_n > h")," "),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("p",null,"This processor outputs the original data stream plus "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cusumLow"),": The cusum value for negative changes"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cusumHigh"),": The cusum value for positive changes"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"changeDetectedLow"),": Boolean indicating if a negative change was detected"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"changeDetectedHigh"),": Boolean indicating if a positive change was detected")))}h.isMDXComponent=!0}}]);