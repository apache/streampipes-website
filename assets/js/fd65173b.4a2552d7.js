"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30179],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},78768:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],p={id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",sidebar_label:"Math"},s=void 0,l={unversionedId:"pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",id:"version-0.92.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",description:"\x3c!--",source:"@site/versioned_docs/version-0.92.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",permalink:"/docs/0.92.0/pe/org.apache.streampipes.processors.enricher.flink.processor.math.mathop",draft:!1,tags:[],version:"0.92.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688328858,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.processors.enricher.flink.processor.math.mathop",title:"Math",sidebar_label:"Math"},sidebar:"documentation",previous:{title:"Language Detection",permalink:"/docs/0.92.0/pe/org.apache.streampipes.processors.textmining.jvm.languagedetection"},next:{title:"Measure Time Between Two Sensors",permalink:"/docs/0.92.0/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.timekeeping"}},c={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Left operand",id:"left-operand",level:3},{value:"Right operand",id:"right-operand",level:3},{value:"Operation",id:"operation",level:3},{value:"Output",id:"output",level:2}],h={toc:u},d="wrapper";function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)(d,(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.enricher.flink.processor.math.mathop/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Performs calculations on event properties (+, -, *, /, %)."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-input"},"Required input"),(0,a.kt)("p",null,"The math processor works with any event that has at least one field containing a numerical value."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"left-operand"},"Left operand"),(0,a.kt)("p",null,"The field from the input event that should be used as the left operand."),(0,a.kt)("h3",{id:"right-operand"},"Right operand"),(0,a.kt)("p",null,"The field from the input event that should be used as the right operand."),(0,a.kt)("h3",{id:"operation"},"Operation"),(0,a.kt)("p",null,"The math operation that should be performed."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"The processor appends the calculation result to each input event."))}m.isMDXComponent=!0}}]);