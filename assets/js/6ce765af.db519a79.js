"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[41514],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var o=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=o.createContext({}),p=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||n;return r?o.createElement(k,l(l({ref:t},c),{},{components:r})):o.createElement(k,l({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<n;p++)l[p]=r[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},79774:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var o=r(87462),a=r(63366),n=(r(67294),r(3905)),l=["components"],s={id:"deploy-docker",title:"Docker Deployment",sidebar_label:"Docker Deployment"},i=void 0,p={unversionedId:"deploy-docker",id:"deploy-docker",title:"Docker Deployment",description:"StreamPipes Compose is a simple collection of user-friendly docker-compose files that easily lets gain first-hand experience with Apache StreamPipes.",source:"@site/../docs/05_deploy-docker.md",sourceDirName:".",slug:"/deploy-docker",permalink:"/docs/next/deploy-docker",draft:!1,tags:[],version:"current",lastUpdatedBy:"airwish",lastUpdatedAt:1720776842,formattedLastUpdatedAt:"Jul 12, 2024",sidebarPosition:5,frontMatter:{id:"deploy-docker",title:"Docker Deployment",sidebar_label:"Docker Deployment"},sidebar:"documentation",previous:{title:"Service selection options",permalink:"/docs/next/choosing-the-right-flavor"},next:{title:"Kubernetes Deployment",permalink:"/docs/next/deploy-kubernetes"}},c={},m=[{value:"TL;DR: A one-liner to rule them all :-)",id:"tldr-a-one-liner-to-rule-them-all--",level:4},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Update services",id:"update-services",level:2},{value:"Upgrade",id:"upgrade",level:2}],d={toc:m},u="wrapper";function k(e){var t=e.components,r=(0,a.Z)(e,l);return(0,n.kt)(u,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"StreamPipes Compose is a simple collection of user-friendly ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose")," files that easily lets gain first-hand experience with Apache StreamPipes."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"NOTE"),": We recommend StreamPipes Compose to only use for initial try-out and testing. If you are a developer and\nwant to develop new pipeline elements or core feature, use the ",(0,n.kt)("a",{parentName:"p",href:"/docs/next/extend-cli"},"StreamPipes CLI"),".")),(0,n.kt)("h4",{id:"tldr-a-one-liner-to-rule-them-all--"},"TL;DR: A one-liner to rule them all :-)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,n.kt)("p",null,"Go to http://localhost to finish the installation in the browser. Once finished, switch to the pipeline editor and start the interactive tour or check the ",(0,n.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/docs/user-guide-tour/"},"online tour")," to learn how to create your first pipeline!"),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Docker >= 17.06.0"),(0,n.kt)("li",{parentName:"ul"},"Docker-Compose >= 1.17.0 (Compose file format: 3.4)"),(0,n.kt)("li",{parentName:"ul"},"Google Chrome (recommended), Mozilla Firefox, Microsoft Edge")),(0,n.kt)("p",null,"Tested on: ",(0,n.kt)("strong",{parentName:"p"},"macOS, Linux, Windows 10 upwards")," (CMD, PowerShell, GitBash)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"macOS")," and ",(0,n.kt)("strong",{parentName:"p"},"Windows")," users can easily get Docker and Docker-Compose on their systems by installing ",(0,n.kt)("strong",{parentName:"p"},"Docker for Mac/Windows")," (recommended)."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"NOTE"),": On purpose, we disabled all port mappings except of http port ",(0,n.kt)("strong",{parentName:"p"},"80")," to access the StreamPipes UI to provide minimal surface for conflicting ports.")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"We provide several options to get you going:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"default"),": Default docker-compose file, called ",(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose.yml"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"nats"),": The standard installation which uses Nats as message broker,called ",(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose.nats.yml"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"full"),": Contains experimental Flink wrappers, called ",(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose.full.yml"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"quickstart"),": Contains predefined example assets, called ",(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose.quickstart.yml"),". The Quickstart mode is a user-friendly feature which comes with predefined example assets like pipelines, dashboards, and data views. These ready-to-use components allow first-time users to get a feel of StreamPipes in IIoT with ease, serving as a practical demonstration of how StreamPipes can be utilized for efficient monitoring and analysis. We highly recommend first-time users to begin with the Quickstart mode to understand the simplicity and convenience that StreamPipes brings to the IIoT platform. Please follow the ",(0,n.kt)("a",{parentName:"li",href:"/docs/next/user-guide-for-quickstart"},"User Guide for Quickstart Mode")," if you want to explore it.")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Other options include configurations for the internally used message broker. The current default is ",(0,n.kt)("inlineCode",{parentName:"p"},"Kafka"),", but you can also start StreamPipes with ",(0,n.kt)("inlineCode",{parentName:"p"},"Nats"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"MQTT")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"Apache Pulsar"),".\nUse one of the other provided docker-compose files.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Starting")," the ",(0,n.kt)("strong",{parentName:"p"},"default")," option is as easy as simply running:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"NOTE"),": Starting might take a while since ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose up")," also initially pulls all Docker images from Dockerhub.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n# go to `http://localhost` after all services are started\n")),(0,n.kt)("p",null,"After all containers are successfully started just got to your browser and visit http://localhost to finish the installation. Once finished, switch to the pipeline editor and start the interactive tour or check the ",(0,n.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/docs/user-guide-tour/"},"online tour")," to learn how to create your first pipeline!"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Stopping")," the ",(0,n.kt)("strong",{parentName:"p"},"default")," option is similarly easy:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose down\n# if you want to remove mapped data volumes, run:\n# docker-compose down -v\n")),(0,n.kt)("p",null,"Starting the ",(0,n.kt)("strong",{parentName:"p"},"nats")," option is almost the same, just specify the ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.nats.yml")," file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.nats.yml up -d\n# go to `http://localhost` after all services are started\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Stopping")," the ",(0,n.kt)("strong",{parentName:"p"},"nats")," option:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.nats.yml down\n")),(0,n.kt)("p",null,"Starting the ",(0,n.kt)("strong",{parentName:"p"},"full")," option is almost the same, just specify the ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.full.yml")," file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.full.yml up -d\n#go to `http://localhost` after all services are started\n")),(0,n.kt)("p",null,"Stopping the ",(0,n.kt)("strong",{parentName:"p"},"full")," option:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.nats.yml down\n#docker-compose -f docker-compose.nats.yml down -v\n")),(0,n.kt)("p",null,"Starting the ",(0,n.kt)("strong",{parentName:"p"},"quickstart")," option:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.quickstart.yml build script-runner\ndocker-compose -f docker-compose.quickstart.yml up -d\n#go to `http://localhost` after all services are started\n")),(0,n.kt)("p",null,"Stopping the ",(0,n.kt)("strong",{parentName:"p"},"quickstart")," option:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f docker-compose.quickstart.yml down\n")),(0,n.kt)("h2",{id:"update-services"},"Update services"),(0,n.kt)("p",null,"To actively pull the latest available Docker images use:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose pull\n")),(0,n.kt)("h2",{id:"upgrade"},"Upgrade"),(0,n.kt)("p",null,"To upgrade to another StreamPipes version, simply edit the ",(0,n.kt)("inlineCode",{parentName:"p"},"SP_VERSION")," in the ",(0,n.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"SP_VERSION=<VERSION>\n")))}k.isMDXComponent=!0}}]);