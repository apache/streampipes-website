"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],p={id:"org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",title:"PLC4X MODBUS",sidebar_label:"PLC4X MODBUS"},l=void 0,c={unversionedId:"pe/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",id:"pe/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",title:"PLC4X MODBUS",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",permalink:"/docs/next/pe/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1694554542,formattedLastUpdatedAt:"Sep 12, 2023",frontMatter:{id:"org.apache.streampipes.connect.iiot.adapters.plc4x.modbus",title:"PLC4X MODBUS",sidebar_label:"PLC4X MODBUS"},sidebar:"documentation",previous:{title:"Open-Protocol",permalink:"/docs/next/pe/org.apache.streampipes.connect.iiot.adapters.plc4x.generic.open-protocol"},next:{title:"PLC4X S7",permalink:"/docs/next/pe/org.apache.streampipes.connect.iiot.adapters.plc4x.s7"}},s={},d=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"PLC Address",id:"plc-address",level:3},{value:"PLC Port",id:"plc-port",level:3},{value:"Node ID",id:"node-id",level:3},{value:"Nodes",id:"nodes",level:3}],u={toc:d},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.connect.iiot.adapters.plc4x.modbus/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"The Modbus adapter allows to connect to a PLC using the Modbus specification."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The following configuration options are available when creating the adapter:"),(0,i.kt)("h3",{id:"plc-address"},"PLC Address"),(0,i.kt)("p",null,"The IP address of the Modbus device without any prefix, which will be added automatically when creating the adapter."),(0,i.kt)("h3",{id:"plc-port"},"PLC Port"),(0,i.kt)("p",null,"The PLC port refers to the port of the PLC, such as 502."),(0,i.kt)("h3",{id:"node-id"},"Node ID"),(0,i.kt)("p",null,"The Node ID refers to the ID of the specific device."),(0,i.kt)("h3",{id:"nodes"},"Nodes"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Nodes")," section requires configuration options for the individual nodes.\nNodes can be either imported from a comma-separated CSV file, or can be directly assigned in the configuration menu."),(0,i.kt)("p",null,"The following fields must be provided for each node:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Runtime Name: Refers to the field to internally identify the node, e.g., in the data explorer or pipeline editor."),(0,i.kt)("li",{parentName:"ul"},"Node Address: Refers to the address of the Node in Modbus, e.g., 1"),(0,i.kt)("li",{parentName:"ul"},"Object Type: Can be selected from the available options ",(0,i.kt)("inlineCode",{parentName:"li"},"DiscreteInput"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Coil"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"InputRegister"),",\nor ",(0,i.kt)("inlineCode",{parentName:"li"},"HoldingRegister"),". ")),(0,i.kt)("p",null,"An example CSV file looks as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Runtime Name,Node Address,Object Type,\nfield1,1,Coil\ntemperature,2,Coil\n")),(0,i.kt)("p",null,"Note that the CSV header must exactly match the titles ",(0,i.kt)("inlineCode",{parentName:"p"},"Runtime Name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Node Address")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Object Type"),"."))}f.isMDXComponent=!0}}]);