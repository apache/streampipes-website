"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7734],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(g,a(a({ref:t},c),{},{components:r})):n.createElement(g,a({ref:t},c))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},13472:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],p={id:"org.apache.streampipes.processor.geo.jvm.reversegeocoding",title:"Reverse Geocoder",sidebar_label:"Reverse Geocoder"},s=void 0,l={unversionedId:"pe/org.apache.streampipes.processor.geo.jvm.reversegeocoding",id:"version-0.92.0/pe/org.apache.streampipes.processor.geo.jvm.reversegeocoding",title:"Reverse Geocoder",description:"\x3c!--",source:"@site/versioned_docs/version-0.92.0/pe/org.apache.streampipes.processor.geo.jvm.reversegeocoding.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processor.geo.jvm.reversegeocoding",permalink:"/docs/pe/org.apache.streampipes.processor.geo.jvm.reversegeocoding",draft:!1,tags:[],version:"0.92.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688317119,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.processor.geo.jvm.reversegeocoding",title:"Reverse Geocoder",sidebar_label:"Reverse Geocoder"},sidebar:"documentation",previous:{title:"Rate Limit",permalink:"/docs/pe/org.apache.streampipes.processors.filters.jvm.limit"},next:{title:"Sentence Detection (English)",permalink:"/docs/pe/org.apache.streampipes.processors.textmining.jvm.sentencedetection"}},c={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Latitude",id:"latitude",level:3},{value:"Longitude",id:"longitude",level:3},{value:"Output",id:"output",level:2}],d={toc:u},m="wrapper";function g(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"}),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"This processor computes place name based on given lat/lng coordinates that are transmitted as fields from an event."),(0,i.kt)("p",null,"This processor automatically downloads the file cities1000.zip from Geonames (",(0,i.kt)("a",{parentName:"p",href:"http://download.geonames.org/export/dump/cities1000.zip"},"http://download.geonames.org/export/dump/cities1000.zip"),"). This file is provided under the CC BY 4.0 license, see ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by/4.0/"},"https://creativecommons.org/licenses/by/4.0/")," for license details."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-input"},"Required input"),(0,i.kt)("p",null,"Input event requires to have latitude and longitude values."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"latitude"},"Latitude"),(0,i.kt)("p",null,"The field containing the latitude value."),(0,i.kt)("h3",{id:"longitude"},"Longitude"),(0,i.kt)("p",null,"The field containing the longitude value."),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"Outputs a similar event like below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{\n  'place': 'Colombo'\n}\n")))}g.isMDXComponent=!0}}]);