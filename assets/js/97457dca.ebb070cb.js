"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[41155],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,f=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(f,p(p({ref:t},l),{},{components:r})):n.createElement(f,p({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,p[1]=s;for(var c=2;c<i;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39376:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),p=["components"],s={id:"technicals-runtime-wrappers",title:"Runtime Wrappers",sidebar_label:"Runtime Wrappers"},o=void 0,c={unversionedId:"technicals-runtime-wrappers",id:"version-0.95.1/technicals-runtime-wrappers",title:"Runtime Wrappers",description:"Overview",source:"@site/versioned_docs/version-0.95.1/07_technicals-runtime-wrappers.md",sourceDirName:".",slug:"/technicals-runtime-wrappers",permalink:"/docs/technicals-runtime-wrappers",draft:!1,tags:[],version:"0.95.1",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1720678410,formattedLastUpdatedAt:"Jul 11, 2024",sidebarPosition:7,frontMatter:{id:"technicals-runtime-wrappers",title:"Runtime Wrappers",sidebar_label:"Runtime Wrappers"},sidebar:"documentation",previous:{title:"Architecture",permalink:"/docs/technicals-architecture"},next:{title:"Messaging",permalink:"/docs/technicals-messaging"}},l={},u=[{value:"Overview",id:"overview",level:2},{value:"Assigning a runtime wrapper to an extension service",id:"assigning-a-runtime-wrapper-to-an-extension-service",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,p);return(0,i.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"In general, StreamPipes has an exchangeable runtime layer, e.g., the actual processing of incoming events can be delegated to a third-party stream processing system such as Kafka Streams or Apache Flink."),(0,i.kt)("p",null,"The default runtime wrapper is the StreamPipes Native Wrapper, called the ",(0,i.kt)("inlineCode",{parentName:"p"},"StandaloneWrapper"),"."),(0,i.kt)("p",null,"Although not recommended for production, we invite interested developers to check out our experimental wrappers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kafka Streams runtime wrapper at ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/streampipes/tree/dev/streampipes-wrapper-kafka-streams"},"https://github.com/apache/streampipes/tree/dev/streampipes-wrapper-kafka-streams")," "),(0,i.kt)("li",{parentName:"ul"},"Apache Flink runtime wrapper at ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/streampipes/tree/dev/streampipes-wrapper-flink"},"https://github.com/apache/streampipes/tree/dev/streampipes-wrapper-flink"))),(0,i.kt)("h2",{id:"assigning-a-runtime-wrapper-to-an-extension-service"},"Assigning a runtime wrapper to an extension service"),(0,i.kt)("p",null,"Runtime wrappers can be assigned in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Service Definition")," of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Init")," class of an extension service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'\n  @Override\n  public SpServiceDefinition provideServiceDefinition(){\n    return SpServiceDefinitionBuilder.create("org.apache.streampipes.extensions.all.jvm",\n    "StreamPipes Extensions (JVM)",\n    "",8090)\n    ...\n    .registerRuntimeProvider(new StandaloneStreamPipesRuntimeProvider())\n    ...\n    .build();\n  }\n\n')),(0,i.kt)("p",null,"Please let us know through our communication channels if you are interested in this feature and if you are willing to contribute!"))}f.isMDXComponent=!0}}]);