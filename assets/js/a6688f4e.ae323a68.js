"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[35297],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),c=r,f=m["".concat(o,".").concat(c)]||m[c]||d[c]||i;return n?a.createElement(f,s(s({ref:t},p),{},{components:n})):a.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=c;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},61050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),s=["components"],l={id:"org.apache.streampipes.sinks.databases.jvm.influxdb",title:"InfluxDB",sidebar_label:"InfluxDB"},o=void 0,u={unversionedId:"pe/org.apache.streampipes.sinks.databases.jvm.influxdb",id:"pe/org.apache.streampipes.sinks.databases.jvm.influxdb",title:"InfluxDB",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.sinks.databases.jvm.influxdb.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.sinks.databases.jvm.influxdb",permalink:"/docs/next/pe/org.apache.streampipes.sinks.databases.jvm.influxdb",draft:!1,tags:[],version:"current",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688328858,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.sinks.databases.jvm.influxdb",title:"InfluxDB",sidebar_label:"InfluxDB"},sidebar:"documentation",previous:{title:"Email Notification",permalink:"/docs/next/pe/org.apache.streampipes.sinks.notifications.jvm.email"},next:{title:"JMS Publisher",permalink:"/docs/next/pe/org.apache.streampipes.sinks.brokers.jvm.jms"}},p={},m=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Hostname",id:"hostname",level:3},{value:"Port",id:"port",level:3},{value:"Database Name",id:"database-name",level:3},{value:"Measurement Name",id:"measurement-name",level:3},{value:"Username",id:"username",level:3},{value:"Password",id:"password",level:3},{value:"Timestamp Field",id:"timestamp-field",level:3},{value:"Buffer Size",id:"buffer-size",level:3},{value:"Maximum Flush",id:"maximum-flush",level:3},{value:"Output",id:"output",level:2}],d={toc:m},c="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.sinks.databases.jvm.influxdb/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Stores events in an InfluxDB."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-input"},"Required input"),(0,i.kt)("p",null,"This sink requires an event that provides a timestamp value (a field that is marked to be of type ",(0,i.kt)("inlineCode",{parentName:"p"},"http://schema\n.org/DateTime"),"."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"hostname"},"Hostname"),(0,i.kt)("p",null,"The hostname/URL of the InfluxDB instance. (Include http(s)://)."),(0,i.kt)("h3",{id:"port"},"Port"),(0,i.kt)("p",null,"The port of the InfluxDB instance."),(0,i.kt)("h3",{id:"database-name"},"Database Name"),(0,i.kt)("p",null,"The name of the database where events will be stored."),(0,i.kt)("h3",{id:"measurement-name"},"Measurement Name"),(0,i.kt)("p",null,"The name of the Measurement where events will be stored (will be created if it does not exist)."),(0,i.kt)("h3",{id:"username"},"Username"),(0,i.kt)("p",null,"The username for the InfluxDB Server."),(0,i.kt)("h3",{id:"password"},"Password"),(0,i.kt)("p",null,"The password for the InfluxDB Server."),(0,i.kt)("h3",{id:"timestamp-field"},"Timestamp Field"),(0,i.kt)("p",null,"The field which contains the required timestamp."),(0,i.kt)("h3",{id:"buffer-size"},"Buffer Size"),(0,i.kt)("p",null,"Indicates how many events are written into a buffer, before they are written to the database."),(0,i.kt)("h3",{id:"maximum-flush"},"Maximum Flush"),(0,i.kt)("p",null,"The maximum waiting time for the buffer to fill the Buffer size before it will be written to the database in ms."),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"(not applicable for data sinks)"))}f.isMDXComponent=!0}}]);