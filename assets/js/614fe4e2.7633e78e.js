"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50470],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>h});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=i.createContext({}),p=function(e){var r=i.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return i.createElement(l.Provider,{value:r},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},u=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),u=n,h=d["".concat(l,".").concat(u)]||d[u]||f[u]||a;return t?i.createElement(h,o(o({ref:r},c),{},{components:t})):i.createElement(h,o({ref:r},c))}));function h(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[d]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},15529:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var i=t(87462),n=t(63366),a=(t(67294),t(3905)),o=["components"],s={id:"org.apache.streampipes.processors.transformation.flink.fieldhasher",title:"Field Hasher",sidebar_label:"Field Hasher",original_id:"org.apache.streampipes.processors.transformation.flink.fieldhasher"},l=void 0,p={unversionedId:"pe/org.apache.streampipes.processors.transformation.flink.fieldhasher",id:"version-0.90.0/pe/org.apache.streampipes.processors.transformation.flink.fieldhasher",title:"Field Hasher",description:"\x3c!--",source:"@site/versioned_docs/version-0.90.0/pe/org.apache.streampipes.processors.transformation.flink.fieldhasher.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.transformation.flink.fieldhasher",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.transformation.flink.fieldhasher",draft:!1,tags:[],version:"0.90.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688361723,formattedLastUpdatedAt:"Jul 3, 2023",frontMatter:{id:"org.apache.streampipes.processors.transformation.flink.fieldhasher",title:"Field Hasher",sidebar_label:"Field Hasher",original_id:"org.apache.streampipes.processors.transformation.flink.fieldhasher"},sidebar:"documentation",previous:{title:"Field Converter",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.transformation.flink.field-converter"},next:{title:"Field Mapper",permalink:"/docs/0.90.0/pe/org.apache.streampipes.processors.transformation.flink.field-mapper"}},c={},d=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Field",id:"field",level:3},{value:"Hash Algorithm",id:"hash-algorithm",level:3},{value:"Output",id:"output",level:2}],f={toc:d},u="wrapper";function h(e){var r=e.components,t=(0,n.Z)(e,o);return(0,a.kt)(u,(0,i.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.transformation.flink.fieldhasher/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"The Field Hasher uses an algorithm to encode values in a field. The Field Hasher can use MD5, SHA1 or SHA2 to hash field values."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-input"},"Required input"),(0,a.kt)("p",null,"This processor requires at least one field of type string."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"field"},"Field"),(0,a.kt)("p",null,"Specifies the string field that will be encoded."),(0,a.kt)("h3",{id:"hash-algorithm"},"Hash Algorithm"),(0,a.kt)("p",null,"Specifies the algorithm used to encode the string field. The following algorithms\nare available: SHA2, MD5 or SHA1."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"The encoded string field."))}h.isMDXComponent=!0}}]);