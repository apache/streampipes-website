"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[18224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=n,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return r?a.createElement(m,o(o({ref:t},p),{},{components:r})):a.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},37221:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=r(87462),n=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",title:"Static Distance Calculator",sidebar_label:"Static Distance Calculator"},c=void 0,s={unversionedId:"pe/org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",id:"pe/org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",title:"Static Distance Calculator",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",permalink:"/docs/next/pe/org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",draft:!1,tags:[],version:"current",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1688310413,formattedLastUpdatedAt:"Jul 2, 2023",frontMatter:{id:"org.apache.streampipes.processors.geo.jvm.processor.staticdistancecalculator",title:"Static Distance Calculator",sidebar_label:"Static Distance Calculator"},sidebar:"documentation",previous:{title:"State Buffer Labeler",permalink:"/docs/next/pe/org.apache.streampipes.processors.transformation.jvm.processor.state.labeler.buffer"},next:{title:"Static Google Maps Geocoder",permalink:"/docs/next/pe/org.apache.streampipes.processor.geo.jvm.staticgeocoding"}},p={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Latitude field",id:"latitude-field",level:3},{value:"Longitude field",id:"longitude-field",level:3},{value:"Latitude",id:"latitude",level:3},{value:"Longitude",id:"longitude",level:3},{value:"Output",id:"output",level:2}],d={toc:u},f="wrapper";function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)(f,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Calculates the distance (in km) between a fixed location (e.g., a place) and a latitude/longitude pair of an input\nevent."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-input"},"Required input"),(0,i.kt)("p",null,"Requires a data stream that provides latitude and longitude values."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Describe the configuration parameters here"),(0,i.kt)("h3",{id:"latitude-field"},"Latitude field"),(0,i.kt)("p",null,"The field containing the latitude value."),(0,i.kt)("h3",{id:"longitude-field"},"Longitude field"),(0,i.kt)("p",null,"The field containing the longitude value."),(0,i.kt)("h3",{id:"latitude"},"Latitude"),(0,i.kt)("p",null,"The latitude value of the fixed location"),(0,i.kt)("h3",{id:"longitude"},"Longitude"),(0,i.kt)("p",null,"The longitude value of the fixed location"),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"Outputs a similar event like below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{\n  'distance': 12.5\n}\n")))}m.isMDXComponent=!0}}]);