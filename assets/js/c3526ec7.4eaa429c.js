"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30350],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var o=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=o.createContext({}),c=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return r?o.createElement(f,n(n({ref:t},l),{},{components:r})):o.createElement(f,n({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,n=new Array(i);n[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,n[1]=s;for(var c=2;c<i;c++)n[c]=r[c];return o.createElement.apply(null,n)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39691:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var o=r(87462),a=r(63366),i=(r(67294),r(3905)),n=["components"],s={id:"org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",title:"Timestamp Extractor",sidebar_label:"Timestamp Extractor"},p=void 0,c={unversionedId:"pe/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",id:"version-0.95.1/pe/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",title:"Timestamp Extractor",description:"\x3c!--",source:"@site/versioned_docs/version-0.95.1/pe/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",permalink:"/docs/0.95.1/pe/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",draft:!1,tags:[],version:"0.95.1",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1720678410,formattedLastUpdatedAt:"Jul 11, 2024",frontMatter:{id:"org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor",title:"Timestamp Extractor",sidebar_label:"Timestamp Extractor"},sidebar:"documentation",previous:{title:"Throughput Monitor",permalink:"/docs/0.95.1/pe/org.apache.streampipes.processors.filters.jvm.throughputmon"},next:{title:"Tokenizer (English)",permalink:"/docs/0.95.1/pe/org.apache.streampipes.processors.textmining.jvm.tokenizer"}},l={},m=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Timestamp Field",id:"timestamp-field",level:3},{value:"Extract Fields",id:"extract-fields",level:3},{value:"Output",id:"output",level:2}],u={toc:m},d="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,n);return(0,i.kt)(d,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.transformation.jvm.processor.timestampextractor/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"This processor extracts a timestamp into the individual time fields (e.g. day field, hour field, ....)"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-input"},"Required input"),(0,i.kt)("p",null,"This processor requires an event that provides a timestamp value (a field that is marked to be of type ",(0,i.kt)("inlineCode",{parentName:"p"},"http://schema\n.org/DateTime"),"."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"timestamp-field"},"Timestamp Field"),(0,i.kt)("p",null,"The field of the event containing the timestamp to parse."),(0,i.kt)("h3",{id:"extract-fields"},"Extract Fields"),(0,i.kt)("p",null,"Select the individual parts of the timestamp that should be extracted, e.g., Year, Minute and Day."),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"The output of this processor is a new event that contains the fields selected by the ",(0,i.kt)("inlineCode",{parentName:"p"},"Extract Fields")," parameter."))}f.isMDXComponent=!0}}]);