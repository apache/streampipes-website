"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[35394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var i=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,o=function(e,t){if(null==e)return{};var r,i,o={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=i.createContext({}),s=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,v=m["".concat(p,".").concat(d)]||m[d]||c[d]||n;return r?i.createElement(v,a(a({ref:t},u),{},{components:r})):i.createElement(v,a({ref:t},u))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,a=new Array(n);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<n;s++)a[s]=r[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},40260:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>v,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var i=r(87462),o=r(63366),n=(r(67294),r(3905)),a=["components"],l={id:"org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",title:"Geo Geometry Validation Filter",sidebar_label:"Geo Geometry Validation Filter"},p=void 0,s={unversionedId:"pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",id:"version-0.97.0/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",title:"Geo Geometry Validation Filter",description:"\x3c!--",source:"@site/versioned_docs/version-0.97.0/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",permalink:"/docs/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",draft:!1,tags:[],version:"0.97.0",lastUpdatedBy:"Philipp Zehnder",lastUpdatedAt:1739799205,formattedLastUpdatedAt:"Feb 17, 2025",frontMatter:{id:"org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple",title:"Geo Geometry Validation Filter",sidebar_label:"Geo Geometry Validation Filter"}},u={},m=[{value:"Description",id:"description",level:2},{value:"Required inputs",id:"required-inputs",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Point Geometry Field",id:"point-geometry-field",level:3},{value:"EPSG field",id:"epsg-field",level:3},{value:"Validation Type",id:"validation-type",level:3},{value:"Validation Output",id:"validation-output",level:3},{value:"Output",id:"output",level:2},{value:"Example",id:"example",level:3}],c={toc:m},d="wrapper";function v(e){var t=e.components,r=(0,o.Z)(e,a);return(0,n.kt)(d,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"Checks the geometry event if the geometry is simple and / or empty."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"required-inputs"},"Required inputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"JTS Geometry"),(0,n.kt)("li",{parentName:"ul"},"EPSG Code"),(0,n.kt)("li",{parentName:"ul"},"Validation Type"),(0,n.kt)("li",{parentName:"ul"},"Validation Output")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"configuration"},"Configuration"),(0,n.kt)("p",null,"Validates geometry of different validations categories."),(0,n.kt)("h3",{id:"point-geometry-field"},"Point Geometry Field"),(0,n.kt)("p",null,"Input Point Geometry"),(0,n.kt)("h3",{id:"epsg-field"},"EPSG field"),(0,n.kt)("p",null,"Integer value representing EPSG code"),(0,n.kt)("h3",{id:"validation-type"},"Validation Type"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"IsEmpty -  Geometry is empty."),(0,n.kt)("li",{parentName:"ul"},"IsSimple - Geometry is simple.  The SFS definition of simplicity follows the general rule that a Geometry is simple if it has no points of self-tangency, self-intersection or other anomalous points.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Valid polygon geometries are simple, since their rings must not self-intersect."),(0,n.kt)("li",{parentName:"ul"},"Linear rings have the same semantics."),(0,n.kt)("li",{parentName:"ul"},"Linear geometries are simple if they do not self-intersect at points other than boundary points."),(0,n.kt)("li",{parentName:"ul"},"Zero-dimensional geometries (points) are simple if they have no repeated points."),(0,n.kt)("li",{parentName:"ul"},"Empty Geometries are always simple!")))),(0,n.kt)("h3",{id:"validation-output"},"Validation Output"),(0,n.kt)("p",null,"Chose the output result of the filter."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Valid - all valid events are parsed through"),(0,n.kt)("li",{parentName:"ul"},"Invalid - all invalid events are parsed through")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"output"},"Output"),(0,n.kt)("p",null,"All events that match the validation output."),(0,n.kt)("h3",{id:"example"},"Example"))}v.isMDXComponent=!0}}]);