"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66316],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>m});var r=t(67294);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function a(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?a(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function p(e,o){if(null==e)return{};var t,r,n=function(e,o){if(null==e)return{};var t,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),i=function(e){var o=r.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):s(s({},o),e)),t},c=function(e){var o=i(e.components);return r.createElement(l.Provider,{value:o},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},d=r.forwardRef((function(e,o){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(t),d=n,m=u["".concat(l,".").concat(d)]||u[d]||g[d]||a;return t?r.createElement(m,s(s({ref:o},c),{},{components:t})):r.createElement(m,s({ref:o},c))}));function m(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=d;var p={};for(var l in o)hasOwnProperty.call(o,l)&&(p[l]=o[l]);p.originalType=e,p[u]="string"==typeof e?e:n,s[1]=p;for(var i=2;i<a;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},69525:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>u});var r=t(87462),n=t(63366),a=(t(67294),t(3905)),s=["components"],p={id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",sidebar_label:"Geo Google Maps Geocoder"},l=void 0,i={unversionedId:"pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",id:"version-0.95.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",description:"\x3c!--",source:"@site/versioned_docs/version-0.95.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",permalink:"/docs/0.95.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",draft:!1,tags:[],version:"0.95.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1718285506,formattedLastUpdatedAt:"Jun 13, 2024",frontMatter:{id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",sidebar_label:"Geo Google Maps Geocoder"},sidebar:"documentation",previous:{title:"Geo Geometry Validation Filter",permalink:"/docs/0.95.0/pe/org.apache.streampipes.processors.geo.jvm.jts.processor.validation.simple"},next:{title:"Geo Google Maps Static Geocoder",permalink:"/docs/0.95.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemapsstatic"}},c={},u=[{value:"Description",id:"description",level:2},{value:"Required inputs",id:"required-inputs",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Place",id:"place",level:3},{value:"Output",id:"output",level:2}],g={toc:u},d="wrapper";function m(e){var o=e.components,t=(0,n.Z)(e,s);return(0,a.kt)(d,(0,r.Z)({},g,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,'This processor computes the latitude and longitude values from a location (a place name such as "Karlsruhe, Germany\n") and adds the result to the event.'),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-inputs"},"Required inputs"),(0,a.kt)("p",null,"Input event requires to have a field which contains the name of a place."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"place"},"Place"),(0,a.kt)("p",null,"The field of the input event that should be used to compute the lat/lng values."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"Outputs a similar event like below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n  'latitude': 6.927079,\n  'longitude': 79.861244  \n}\n")))}m.isMDXComponent=!0}}]);