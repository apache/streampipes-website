"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69363],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},p=Object.keys(e);for(o=0;o<p.length;o++)r=p[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(o=0;o<p.length;o++)r=p[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),c=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(a.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,f=u["".concat(a,".").concat(d)]||u[d]||m[d]||p;return r?o.createElement(f,i(i({ref:t},l),{},{components:r})):o.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,i=new Array(p);i[0]=d;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<p;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},93933:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var o=r(87462),n=r(63366),p=(r(67294),r(3905)),i=["components"],s={id:"org.apache.streampipes.processors.filters.jvm.compose",title:"Compose",sidebar_label:"Compose"},a=void 0,c={unversionedId:"pe/org.apache.streampipes.processors.filters.jvm.compose",id:"pe/org.apache.streampipes.processors.filters.jvm.compose",title:"Compose",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.processors.filters.jvm.compose.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.filters.jvm.compose",permalink:"/docs/next/pe/org.apache.streampipes.processors.filters.jvm.compose",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1694453256,formattedLastUpdatedAt:"Sep 11, 2023",frontMatter:{id:"org.apache.streampipes.processors.filters.jvm.compose",title:"Compose",sidebar_label:"Compose"},sidebar:"documentation",previous:{title:"Chunker (English)",permalink:"/docs/next/pe/org.apache.streampipes.processors.textmining.jvm.chunker"},next:{title:"Compose",permalink:"/docs/next/pe/org.apache.streampipes.processors.filters.jvm.compose"}},l={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Output",id:"output",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,p.kt)(d,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",{align:"center"},(0,p.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.filters.jvm.compose/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"description"},"Description"),(0,p.kt)("p",null,"Merges two event streams. Any time, a new input event arrives, it is merged with the last input event from the other\nevent stream and forwarded."),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"required-input"},"Required input"),(0,p.kt)("p",null,"The Compose processor does not have any specific input requirements."),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"configuration"},"Configuration"),(0,p.kt)("p",null,"(no further configuration required)"),(0,p.kt)("h2",{id:"output"},"Output"),(0,p.kt)("p",null,"The compose processor has a configurable output that can be selected by the user at pipeline modeling time."))}f.isMDXComponent=!0}}]);