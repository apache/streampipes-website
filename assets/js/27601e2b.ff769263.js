"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[85435],{3905:(e,t,o)=>{o.d(t,{Zo:()=>i,kt:()=>m});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function p(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):p(p({},t),e)),o},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=c(o),d=n,m=u["".concat(l,".").concat(d)]||u[d]||g[d]||a;return o?r.createElement(m,p(p({ref:t},i),{},{components:o})):r.createElement(m,p({ref:t},i))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,p=new Array(a);p[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,p[1]=s;for(var c=2;c<a;c++)p[c]=o[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},78426:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=o(87462),n=o(63366),a=(o(67294),o(3905)),p=["components"],s={id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",sidebar_label:"Geo Google Maps Geocoder"},l=void 0,c={unversionedId:"pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",id:"pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",permalink:"/docs/next/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1694453256,formattedLastUpdatedAt:"Sep 11, 2023",frontMatter:{id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps",title:"Geo Google Maps Geocoder",sidebar_label:"Geo Google Maps Geocoder"}},i={},u=[{value:"Description",id:"description",level:2},{value:"Required inputs",id:"required-inputs",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Place",id:"place",level:3},{value:"Output",id:"output",level:2}],g={toc:u},d="wrapper";function m(e){var t=e.components,o=(0,n.Z)(e,p);return(0,a.kt)(d,(0,r.Z)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.geo.jvm.latlong.processor.geocoder.googlemaps/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,'This processor computes the latitude and longitude values from a location (a place name such as "Karlsruhe, Germany\n") and adds the result to the event.'),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-inputs"},"Required inputs"),(0,a.kt)("p",null,"Input event requires to have a field which contains the name of a place."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("h3",{id:"place"},"Place"),(0,a.kt)("p",null,"The field of the input event that should be used to compute the lat/lng values."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"Outputs a similar event like below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n  'latitude': 6.927079,\n  'longitude': 79.861244  \n}\n")))}m.isMDXComponent=!0}}]);