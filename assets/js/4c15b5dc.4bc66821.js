"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[31809],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),h=a,m=u["".concat(p,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},73548:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],s={id:"extend-archetypes",title:"Maven Archetypes",sidebar_label:"Maven Archetypes"},p=void 0,c={unversionedId:"extend-archetypes",id:"version-0.97.0/extend-archetypes",title:"Maven Archetypes",description:"In this tutorial we explain how you can use the Maven archetypes to develop your own StreamPipes processors and sinks.",source:"@site/versioned_docs/version-0.97.0/06_extend-archetypes.md",sourceDirName:".",slug:"/extend-archetypes",permalink:"/docs/extend-archetypes",draft:!1,tags:[],version:"0.97.0",lastUpdatedBy:"Philipp Zehnder",lastUpdatedAt:1739799205,formattedLastUpdatedAt:"Feb 17, 2025",sidebarPosition:6,frontMatter:{id:"extend-archetypes",title:"Maven Archetypes",sidebar_label:"Maven Archetypes"},sidebar:"documentation",previous:{title:"StreamPipes CLI",permalink:"/docs/extend-cli"},next:{title:"Your first data processor",permalink:"/docs/extend-first-processor"}},l={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create Project",id:"create-project",level:2},{value:"Project structure",id:"project-structure",level:2},{value:"Next steps",id:"next-steps",level:2}],d={toc:u},h="wrapper";function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(h,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this tutorial we explain how you can use the Maven archetypes to develop your own StreamPipes processors and sinks.\nWe use IntelliJ in this tutorial, but it works with any IDE of your choice."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"You need to have Maven installed, further you need an up and running StreamPipes installation on your development computer."),(0,o.kt)("h2",{id:"create-project"},"Create Project"),(0,o.kt)("p",null,"To create a new project, we provide multiple Maven Archteypes.\nCurrently, we provide archetypes for standalone Java-based microservices and archetypes for the experimental Flink wrapper.\nThe commands required to create a new pipeline element project can be found below. Make sure that you select a version compatible with your StreamPipes installation.\nCopy the command into your terminal to create a new project.\nThe project will be created in the current folder.\nFirst, the ",(0,o.kt)("inlineCode",{parentName:"p"},"groupId")," of the resulting Maven artifact must be set.\nWe use ",(0,o.kt)("inlineCode",{parentName:"p"},"groupId"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"org.example")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"artifactId"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"ExampleProcessor"),".\nYou can keep the default values for the other settings, confirm them by hitting enter."),(0,o.kt)("admonition",{title:"Choosing the right version",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Make sure that the version used to create your archetype matches your running Apache StreamPipes version.\nIn the example below, replace ",(0,o.kt)("inlineCode",{parentName:"p"},"{sp.version}")," with the proper version, e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"0.92.0"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mvn archetype:generate                                           \\\n  -DarchetypeGroupId=org.apache.streampipes                              \\\n  -DarchetypeArtifactId=streampipes-archetype-extensions-jvm  \\\n  -DarchetypeVersion={sp.version}\n")),(0,o.kt)("h2",{id:"project-structure"},"Project structure"),(0,o.kt)("p",null,"Open the project in your IDE.\nIf everything worked, the structure should look similar to the following image.\nIn the ",(0,o.kt)("em",{parentName:"p"},"main")," package, it is defined which processors / sinks you want to activate and the ",(0,o.kt)("em",{parentName:"p"},"pe.example")," package contains two skeletons for creating a data processor and sink.\nFor details, have a look at the other parts of the Developer Guide, where these classes are explained in more depth."),(0,o.kt)("img",{src:"/img/archetype/project_structure.png",width:"30%",alt:"Project Structure"}),(0,o.kt)("h2",{id:"next-steps"},"Next steps"),(0,o.kt)("p",null,"Click ",(0,o.kt)("a",{parentName:"p",href:"/docs/extend-first-processor"},"here")," to learn how to create your first data processor."))}m.isMDXComponent=!0}}]);