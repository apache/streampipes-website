"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[81805],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>h});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return t?n.createElement(h,a(a({ref:r},l),{},{components:t})):n.createElement(h,a({ref:r},l))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var c=2;c<s;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},80737:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var n=t(87462),o=t(63366),s=(t(67294),t(3905)),a=["components"],p={id:"org.apache.streampipes.processors.enricher.jvm.processor.expression",title:"Math Expression",sidebar_label:"Math Expression"},i=void 0,c={unversionedId:"pe/org.apache.streampipes.processors.enricher.jvm.processor.expression",id:"pe/org.apache.streampipes.processors.enricher.jvm.processor.expression",title:"Math Expression",description:"\x3c!--",source:"@site/../docs/pe/org.apache.streampipes.processors.enricher.jvm.processor.expression.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.enricher.jvm.processor.expression",permalink:"/docs/next/pe/org.apache.streampipes.processors.enricher.jvm.processor.expression",draft:!1,tags:[],version:"current",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1728656408,formattedLastUpdatedAt:"Oct 11, 2024",frontMatter:{id:"org.apache.streampipes.processors.enricher.jvm.processor.expression",title:"Math Expression",sidebar_label:"Math Expression"},sidebar:"documentation",previous:{title:"Math",permalink:"/docs/next/pe/org.apache.streampipes.processors.enricher.jvm.processor.math.mathop"},next:{title:"Measure Time Between Two Sensors",permalink:"/docs/next/pe/org.apache.streampipes.processors.transformation.jvm.booloperator.timekeeping"}},l={},u=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Output",id:"output",level:2}],m={toc:u},d="wrapper";function h(e){var r=e.components,t=(0,o.Z)(e,a);return(0,s.kt)(d,(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",{align:"center"},(0,s.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.enricher.jvm.processor.expression/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"description"},"Description"),(0,s.kt)("p",null,"A pipeline element that evaluates Math expressions using the Apache Commons JEXL library."),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"required-input"},"Required input"),(0,s.kt)("p",null,"This processor works with any input stream that contains numerical values."),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"A math expression can be defined using the JEXL syntax (see ",(0,s.kt)("a",{parentName:"p",href:"https://commons.apache.org/proper/commons-jexl/index.html"},"https://commons.apache.org/proper/commons-jexl/index.html"),")."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"flow_rate*2\n")),(0,s.kt)("p",null,"It is also possible to use methods from ",(0,s.kt)("inlineCode",{parentName:"p"},"java.lang.Math"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Math.pow(flow_rate^2)\n")),(0,s.kt)("p",null,"All fields from th einput stream are available as variables."),(0,s.kt)("h2",{id:"output"},"Output"),(0,s.kt)("p",null,"For each expression, an additional field is created in the output stream. Field names are user-defined."))}h.isMDXComponent=!0}}]);