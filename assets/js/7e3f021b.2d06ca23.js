"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[85285],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||o;return a?n.createElement(d,i(i({ref:t},c),{},{components:a})):n.createElement(d,i({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},92810:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],s={title:"Apache StreamPipes release 0.91.0",author:"Tim Bossenmaier",authorURL:"https://github.com/bossenti",authorImageURL:"/img/bossenmaier.png"},l=void 0,p={permalink:"/blog/2023/04/12/release-091",source:"@site/blog/2023-04-12-release-091.md",title:"Apache StreamPipes release 0.91.0",description:"14 minutes to read",date:"2023-04-12T00:00:00.000Z",formattedDate:"April 12, 2023",tags:[],readingTime:4.72,hasTruncateMarker:!0,authors:[{name:"Tim Bossenmaier",url:"https://github.com/bossenti",imageURL:"/img/bossenmaier.png"}],frontMatter:{title:"Apache StreamPipes release 0.91.0",author:"Tim Bossenmaier",authorURL:"https://github.com/bossenti",authorImageURL:"/img/bossenmaier.png"},prevItem:{title:"Apache StreamPipes release 0.92.0",permalink:"/blog/2023/06/16/release-092"},nextItem:{title:"Apache StreamPipes release 0.90.0",permalink:"/blog/2023/01/17/release-090"}},c={authorsImageUrls:[void 0]},u=[{value:"StreamPipes Python",id:"streampipes-python",level:2},{value:"Getting started",id:"getting-started",level:3},{value:"Query Data from StreamPipes data lake",id:"query-data-from-streampipes-data-lake",level:3},{value:"Create Adapter without starting",id:"create-adapter-without-starting",level:2},{value:"Redirect after Login",id:"redirect-after-login",level:2},{value:"Support Output Streams for Standalone Functions",id:"support-output-streams-for-standalone-functions",level:2}],m={toc:u},h="wrapper";function d(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)(h,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("div",{style:{float:"left",paddingRight:"40px"}},"14 minutes to read"))),(0,o.kt)("br",null),(0,o.kt)("p",null,"The Apache StreamPipes community is delighted to announce the release of Apache StreamPipes version 0.91.0!\nThe biggest highlight of this release is the birth of our official StreamPipes Python library.\nApart from that, we have made a lot of improvements under the hood, especially in terms of improving the development experience (e.g., by introducing and enforcing code style rules).\nNevertheless, our new version includes more than 90 improvements and bug fixes in total."),(0,o.kt)("p",null,"The current release can be downloaded ",(0,o.kt)("a",{href:"https://streampipes.apache.org/download.html"},"here"),"."),(0,o.kt)("h2",{id:"streampipes-python"},"StreamPipes Python"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/"},"Apache StreamPipes")," aims to enable non-technical users to connect and analyze IoT data streams.\nTo this end, it provides an easy-to-use and convenient user interface that allows one to connect to an IoT data source and create some visual\ngraphs within a few minutes. ",(0,o.kt)("br",null),"\nAlthough this is the main use case of Apache StreamPipes, it can also provide great value for people who are eager to work on data analysis or data science with IoT data, but don't want to get in touch with all the hassle associated with extracting data from devices in a suitable format.\nIn this scenario, StreamPipes helps you connect to your data source and extract the data for you.\nYou then can make the data available outside StreamPipes by writing it into an external source, such as a database, Kafka, etc.\nWhile this requires another component, you can also extract your data directly from StreamPipes programmatically using the StreamPipes API.\nFor convenience, we also provide you with a StreamPipes client both available for Java and Python.\nSpecifically with StreamPipes Python, we want to address the amazing data analytics and data science community in Python and benefit from the great universe of Python libraries out there."),(0,o.kt)("h3",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,"Besides our official version, which you can access ",(0,o.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/download.html"},"here"),",\nwe provide Apache StreamPipes as a convenient release via PyPI.\nTherefore, you can easily install it via the following command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install streampipes\n")),(0,o.kt)("p",null,"All documentation related to StreamPipes Python can be found ",(0,o.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/docs/docs/python/latest/"},"here"),"."),(0,o.kt)("p",null,"But now enough words are written, let's just start with a few examples.\nAs a first step, we want to establish a connection to a running StreamPipes instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from streampipes.client import StreamPipesClient\nfrom streampipes.client.config import StreamPipesClientConfig\nfrom streampipes.client.credential_provider import StreamPipesApiKeyCredentials\n\nconfig = StreamPipesClientConfig(\n    credential_provider = StreamPipesApiKeyCredentials(\n        username = "test@streampipes.apache.org",\n        api_key = "DEMO-KEY",\n        ),\n    host_address = "localhost",\n    https_disabled = True,\n    port = 80\n)\n\nclient = StreamPipesClient(client_config=config)\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"client.describe()")," gives you an overview about what can be discovered via the Python client:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Hi there!\nYou are connected to a StreamPipes instance running at http://localhost:80.\nThe following StreamPipes resources are available with this client:\n1x DataLakeMeasures\n1x DataStreams\n")),(0,o.kt)("p",null,"The required API key can be retrieved from StreamPipes via the UI:"),(0,o.kt)("img",{src:"/img/blog/2023-04-12/how-to-get-api-key.gif",alt:"demonstration how to get an API key in form of a gif"}),(0,o.kt)("h3",{id:"query-data-from-streampipes-data-lake"},"Query Data from StreamPipes data lake"),(0,o.kt)("p",null,"As a first step, we can see which data sets are available in the data lake:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"client.dataLakeMeasureApi.all().to_pandas()\n")),(0,o.kt)("p",null,"To query data for a specific data lake measure, the following command takes you there:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'client.dataLakeMeasureApi.get(identifier="flow-rate").to_pandas()\n')),(0,o.kt)("p",null,"There are some parameters that allow you to query data more specifically, visit the ",(0,o.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/docs/docs/python/latest/reference/endpoint/api/data_lake_measure/#streampipes.endpoint.api.data_lake_measure.MeasurementGetQueryConfig"},"docs")," for more detailed information."),(0,o.kt)("p",null,"If you are curious which features are available for StreamPipes Python, have a look at our ",(0,o.kt)("a",{parentName:"p",href:"https://streampipes.apache.org/docs/docs/python/latest/tutorials/1-introduction-to-streampipes-python-client/"},"tutorial section"),"."),(0,o.kt)("p",null,"We plan to further extend the Python library in the next releases - we welcome your ideas on any features you'd like to see!"),(0,o.kt)("h2",{id:"create-adapter-without-starting"},"Create Adapter without starting"),(0,o.kt)("p",null,"Until now, when creating an adapter in StreamPipes, the adapter was started immediately after completion.\nFrom now on you can choose via the adapter overview in the last dialog whether the adapter should be started immediately or later (this is then possible in the adapter overview)."),(0,o.kt)("img",{src:"/img/blog/2023-04-12/adapter-running.gif",alt:"demonstration how to disable automatic start of an adapter in form of a gif"}),(0,o.kt)("h2",{id:"redirect-after-login"},"Redirect after Login"),(0,o.kt)("p",null,"This is another small user interface improvement: when a user opens a StreamPipes link even though they are not logged in, e.g.,\n",(0,o.kt)("a",{parentName:"p",href:"http://streampipes.demo/#/connect"},"http://streampipes.demo/#/connect"),", StreamPipes displays the login dialog and now redirects the user directly to the target view\n(in this case the connection overview)."),(0,o.kt)("h2",{id:"support-output-streams-for-standalone-functions"},"Support Output Streams for Standalone Functions"),(0,o.kt)("p",null,"Within the last release, ",(0,o.kt)("a",{parentName:"p",href:"/docs/blog/2023/01/17/release-090.html"},"0.90.0"),", we introduced StreamPipes Functions as a lightweight alternative to processing elements.",(0,o.kt)("br",{parentName:"p"}),"\n","StreamPipes Functions do now support having output streams, which means that they allow not only to consume but to send data to StreamPipes as well."),(0,o.kt)("p",null,"Below you can see a simple example function that demonstrates how events can be pushed back to StreamPipes again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class FunctionPublishExample extends StreamPipesFunction {\n\n  private static final Logger LOG = LoggerFactory.getLogger(FunctionPublishExample.class);\n\n  private static final String FUNCTION_ID = "org.apache.streampipes.example.function.publish";\n  private static final String STREAM_APP_ID = "example-output-stream-1";\n\n  private SpOutputCollector outputCollector;\n\n  @Override\n  public List<String> requiredStreamIds() {\n    return List.of("urn:streampipes.apache.org:eventstream:EtMUkN");\n  }\n\n  @Override\n  public void onServiceStarted(FunctionContext context) {\n    LOG.info("Service started");\n    this.outputCollector = context.getOutputCollectors().get(STREAM_APP_ID);\n  }\n\n  @Override\n  public void onEvent(Event event, String streamId) {\n    LOG.info("on event");\n    var ev = new Event();\n    ev.addField("timestamp", System.currentTimeMillis());\n    ev.addField("example-property", "abc");\n    this.outputCollector.collect(ev);\n  }\n\n  @Override\n  public void onServiceStopped() {\n    LOG.info("service stopped");\n  }\n\n  @Override\n  public FunctionConfig getFunctionConfig() {\n\n    return FunctionConfigBuilder\n        .create(FunctionId.from(FUNCTION_ID, 1))\n        .withOutputStream(DataStreamBuilder.create(STREAM_APP_ID, "My Function Stream", "")\n            .property(EpProperties.timestampProperty("timestamp"))\n            .property(EpProperties.stringEp(\n                Labels.from("my-example-property", "test", "test"),\n                "example-property",\n                SO.TEXT,\n                PropertyScope.MEASUREMENT_PROPERTY))\n            .format(Formats.jsonFormat())\n            .protocol(Protocols.kafka("localhost", 9094, STREAM_APP_ID))\n            .build())\n        .build();\n  }\n}\n')),(0,o.kt)("p",null,"This functionality is also already supported in StreamPipes Python! \ud83d\ude80"),(0,o.kt)("p",null,"This means that you can write a StreamPipes function in Python that allows you to consume streams of data from StreamPipes,\nperform any data manipulation in Python, and send the data back to StreamPipes, where it can be further processed."),(0,o.kt)("br",null),"To get a comprehensive overview of all changes released within Apache StreamPipes 0.91.0 please visit our [release notes](https://github.com/apache/incubator-streampipes/blob/release/0.91.0/RELEASE_NOTES.md#0910).")}d.isMDXComponent=!0}}]);