"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[34267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"org.apache.streampipes.processors.changedetection.jvm.welford",title:"Welford Change Detection",sidebar_label:"Welford Change Detection"},c=void 0,s={unversionedId:"pe/org.apache.streampipes.processors.changedetection.jvm.welford",id:"version-0.95.0/pe/org.apache.streampipes.processors.changedetection.jvm.welford",title:"Welford Change Detection",description:"\x3c!--",source:"@site/versioned_docs/version-0.95.0/pe/org.apache.streampipes.processors.changedetection.jvm.welford.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.changedetection.jvm.welford",permalink:"/docs/0.95.0/pe/org.apache.streampipes.processors.changedetection.jvm.welford",draft:!1,tags:[],version:"0.95.0",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1718285506,formattedLastUpdatedAt:"Jun 13, 2024",frontMatter:{id:"org.apache.streampipes.processors.changedetection.jvm.welford",title:"Welford Change Detection",sidebar_label:"Welford Change Detection"},sidebar:"documentation",previous:{title:"Value Changed",permalink:"/docs/0.95.0/pe/org.apache.streampipes.processors.transformation.jvm.changed-value"},next:{title:"Apache IoTDB",permalink:"/docs/0.95.0/pe/org.apache.streampipes.sinks.databases.jvm.iotdb"}},p={},d=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Value to observe",id:"value-to-observe",level:3},{value:"Parameter <code>k</code>",id:"parameter-k",level:3},{value:"Parameter <code>h</code>",id:"parameter-h",level:3},{value:"Output",id:"output",level:2}],u={toc:d},m="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Performs change detection on a single dimension of the incoming data stream. This implementation tracks the mean and the\nstandard deviation using Welford's algorithm, which is well suited for data streams. A change is detected if the\ncumulative deviation from the mean exceeds a certain threshold."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"required-input"},"Required input"),(0,o.kt)("p",null,"The welford change dectection processor requires a data stream that has at least one field containing a numerical value."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"value-to-observe"},"Value to observe"),(0,o.kt)("p",null,"Specify the dimension of the data stream (e.g. the temperature) on which to perform change detection."),(0,o.kt)("h3",{id:"parameter-k"},"Parameter ",(0,o.kt)("inlineCode",{parentName:"h3"},"k")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"k")," controls the sensitivity of the change detector. Its unit are standard deviations. For an observation ",(0,o.kt)("inlineCode",{parentName:"p"},"x_n"),", the\nCusum value is ",(0,o.kt)("inlineCode",{parentName:"p"},"S_n = max(0, S_{n-1} - z-score(x_n) - k)"),". Thus, the cusum-score ",(0,o.kt)("inlineCode",{parentName:"p"},"S")," icnreases\nif ",(0,o.kt)("inlineCode",{parentName:"p"},"S_{n-1} - z-score(x_n) > k"),"."),(0,o.kt)("h3",{id:"parameter-h"},"Parameter ",(0,o.kt)("inlineCode",{parentName:"h3"},"h")),(0,o.kt)("p",null,"The alarm theshold in standard deviations. An alarm occurs if ",(0,o.kt)("inlineCode",{parentName:"p"},"S_n > h")),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("p",null,"This processor outputs the original data stream plus"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cumSumLow"),": The cumulative sum value for negative changes"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cumSumHigh"),": The cumulative sum value for positive changes"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"changeDetectedLow"),": Boolean indicating if a negative change was detected"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"changeDetectedHigh"),": Boolean indicating if a positive change was detected")))}h.isMDXComponent=!0}}]);