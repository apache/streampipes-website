"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21208],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),h=n,g=u["".concat(c,".").concat(h)]||u[h]||d[h]||i;return r?o.createElement(g,a(a({ref:t},p),{},{components:r})):o.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},98215:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var o=r(87462),n=r(63366),i=(r(67294),r(3905)),a=["components"],s={id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",title:"Geo Distance Calculator (Haversine)",sidebar_label:"Geo Distance Calculator (Haversine)"},c=void 0,l={unversionedId:"pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",id:"version-0.97.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",title:"Geo Distance Calculator (Haversine)",description:"\x3c!--",source:"@site/versioned_docs/version-0.97.0/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",permalink:"/docs/pe/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",draft:!1,tags:[],version:"0.97.0",lastUpdatedBy:"Philipp Zehnder",lastUpdatedAt:1739799205,formattedLastUpdatedAt:"Feb 17, 2025",frontMatter:{id:"org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine",title:"Geo Distance Calculator (Haversine)",sidebar_label:"Geo Distance Calculator (Haversine)"}},p={},u=[{value:"Description",id:"description",level:2},{value:"Required inputs",id:"required-inputs",level:2},{value:"Configuration",id:"configuration",level:2},{value:"First Longitude",id:"first-longitude",level:3},{value:"First Latitude",id:"first-latitude",level:3},{value:"Second Longitude",id:"second-longitude",level:3},{value:"Second Latitude",id:"second-latitude",level:3},{value:"Output",id:"output",level:2}],d={toc:u},h="wrapper";function g(e){var t=e.components,r=(0,n.Z)(e,a);return(0,i.kt)(h,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.processors.geo.jvm.latlong.processor.distancecalculator.haversine/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Calculates the distance between two latitude/longitude pairs in a single event with the"),(0,i.kt)("a",{href:"https://en.wikipedia.org/wiki/Haversine_formula",target:"_blank"},"Haversine formula"),".",(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"required-inputs"},"Required inputs"),(0,i.kt)("p",null,"Requires a position of point on the Earth's surface specified by the two geographic coordinates: the longitude and latitude of the point."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"first-longitude"},"First Longitude"),(0,i.kt)("p",null,"This is the first geographic coordinate that specifies the east-west position of a point on the Earth's surface."),(0,i.kt)("h3",{id:"first-latitude"},"First Latitude"),(0,i.kt)("p",null,"This is the second geographic coordinate that specifies the north-south position of a point on the Earth's surface."),(0,i.kt)("h3",{id:"second-longitude"},"Second Longitude"),(0,i.kt)("p",null,"This is the second geographic coordinate that specifies the east-west position of a point on the Earth's surface."),(0,i.kt)("h3",{id:"second-latitude"},"Second Latitude"),(0,i.kt)("p",null,"This is the second geographic coordinate that specifies the north-south position of a point on the Earth's surface."),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"{\n'distance': 12.2\n}"))}g.isMDXComponent=!0}}]);