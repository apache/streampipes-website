"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[92550],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>v});var n=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(i),m=o,v=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return i?n.createElement(v,r(r({ref:t},d),{},{components:i})):n.createElement(v,r({ref:t},d))}));function v(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=i.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=i[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},72787:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>v,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=i(87462),o=i(63366),a=(i(67294),i(3905)),r=["components"],l={id:"org.apache.streampipes.sinks.databases.jvm.redis",title:"Redis",sidebar_label:"Redis"},s=void 0,p={unversionedId:"pe/org.apache.streampipes.sinks.databases.jvm.redis",id:"version-0.95.1/pe/org.apache.streampipes.sinks.databases.jvm.redis",title:"Redis",description:"\x3c!--",source:"@site/versioned_docs/version-0.95.1/pe/org.apache.streampipes.sinks.databases.jvm.redis.md",sourceDirName:"pe",slug:"/pe/org.apache.streampipes.sinks.databases.jvm.redis",permalink:"/docs/pe/org.apache.streampipes.sinks.databases.jvm.redis",draft:!1,tags:[],version:"0.95.1",lastUpdatedBy:"Dominik Riemer",lastUpdatedAt:1720678410,formattedLastUpdatedAt:"Jul 11, 2024",frontMatter:{id:"org.apache.streampipes.sinks.databases.jvm.redis",title:"Redis",sidebar_label:"Redis"},sidebar:"documentation",previous:{title:"RabbitMQ Publisher",permalink:"/docs/pe/org.apache.streampipes.sinks.brokers.jvm.rabbitmq"},next:{title:"RocketMQ Publisher",permalink:"/docs/pe/org.apache.streampipes.sinks.brokers.jvm.rocketmq"}},d={},c=[{value:"Description",id:"description",level:2},{value:"Required input",id:"required-input",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Hostname",id:"hostname",level:3},{value:"Port",id:"port",level:3},{value:"Key Field",id:"key-field",level:3},{value:"Auto Increment",id:"auto-increment",level:3},{value:"Expiration Time (Optional)",id:"expiration-time-optional",level:3},{value:"Password (Optional)",id:"password-optional",level:3},{value:"Connection Name (Optional)",id:"connection-name-optional",level:3},{value:"DB Index (Optional)",id:"db-index-optional",level:3},{value:"Max Active (Redis Pool) (Optional)",id:"max-active-redis-pool-optional",level:3},{value:"Max Idle (Redis Pool) (Optional)",id:"max-idle-redis-pool-optional",level:3},{value:"Max Wait (Redis Pool) (Optional)",id:"max-wait-redis-pool-optional",level:3},{value:"Max Timeout (Redis Pool) (Optional)",id:"max-timeout-redis-pool-optional",level:3},{value:"Output",id:"output",level:2}],u={toc:c},m="wrapper";function v(e){var t=e.components,i=(0,o.Z)(e,r);return(0,a.kt)(m,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/pipeline-elements/org.apache.streampipes.sinks.databases.jvm.redis/icon.png",width:"150px;",class:"pe-image-documentation"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Stores events in a Redis key-value store."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-input"},"Required input"),(0,a.kt)("p",null,"This sink does not have any requirements and works with any incoming event type."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Describe the configuration parameters here"),(0,a.kt)("h3",{id:"hostname"},"Hostname"),(0,a.kt)("p",null,"The hostname of the Redis instance"),(0,a.kt)("h3",{id:"port"},"Port"),(0,a.kt)("p",null,"The port of the Redis instance (default 6379)"),(0,a.kt)("h3",{id:"key-field"},"Key Field"),(0,a.kt)("p",null,"Runtime field to be used as the key when storing the event. If auto-increment is enabled, this setting will be ignored."),(0,a.kt)("h3",{id:"auto-increment"},"Auto Increment"),(0,a.kt)("p",null,"Enabling this will generate a sequential numeric key for every record inserted. (note: enabling this will ignore Key Field)"),(0,a.kt)("h3",{id:"expiration-time-optional"},"Expiration Time (Optional)"),(0,a.kt)("p",null,"The expiration time for a persisted event."),(0,a.kt)("h3",{id:"password-optional"},"Password (Optional)"),(0,a.kt)("p",null,"The password for the Redis instance."),(0,a.kt)("h3",{id:"connection-name-optional"},"Connection Name (Optional)"),(0,a.kt)("p",null,"A connection name to assign for the current connection."),(0,a.kt)("h3",{id:"db-index-optional"},"DB Index (Optional)"),(0,a.kt)("p",null,"Zero-based numeric index for Redis database."),(0,a.kt)("h3",{id:"max-active-redis-pool-optional"},"Max Active (Redis Pool) (Optional)"),(0,a.kt)("p",null,"The maximum number of connections that can be allocated from the pool."),(0,a.kt)("h3",{id:"max-idle-redis-pool-optional"},"Max Idle (Redis Pool) (Optional)"),(0,a.kt)("p",null,"The maximum number of connections that can remain idle in the pool."),(0,a.kt)("h3",{id:"max-wait-redis-pool-optional"},"Max Wait (Redis Pool) (Optional)"),(0,a.kt)("p",null,"The maximum number of milliseconds that the caller needs to wait when no connection is available."),(0,a.kt)("h3",{id:"max-timeout-redis-pool-optional"},"Max Timeout (Redis Pool) (Optional)"),(0,a.kt)("p",null,"The maximum time for connection timeout and read/write timeout."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"(not applicable for data sinks)"))}v.isMDXComponent=!0}}]);